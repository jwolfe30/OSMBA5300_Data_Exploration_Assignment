files <- dir(data_path, pattern = "trends_up_to*", full.names = TRUE)
# data path
data_path <- "data/"
# read in google trend files to a single dataframe
files <- dir(data_path, pattern = "trends_up_to*", full.names = TRUE)
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
bind_rows()
# data path
data_path <- "data"
# read in google trend files to a single dataframe
files <- dir(data_path, pattern = "trends_up_to*", full.names = TRUE)
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
bind_rows()
# read in google trend files to a single dataframe
files <- list.files(path = "data/", pattern = "trends_up_to*", full.names = TRUE)
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
bind_rows()
files
# read in google trend files to a single dataframe
files <- list.files(path = "data/", pattern = "trends_up_to*", full.names = TRUE)
raw_sch_df<- files %>%
map(files) %>%
bind_rows()
raw_sch_df
raw_sch_df<- files %>%
map(read.csv) %>%
bind_rows()
# read in google trend files to a single dataframe
files <- dir(data_path, pattern = "trends_up_to*")
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
bind_rows()
# read in google trend files to a single dataframe
files <- dir(data_path, pattern = "trends_up_to*")
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
reduce(rbind)
# read college scoreboard files into dataframes
id_name_link <- read.csv(file = "data/id_name_link.csv")
scorecard <- read.csv(file = "data/Most+Recent+Cohorts+(Scorecard+Elements).csv")
dictionary_scorecard <- read.csv(file = "data/CollegeScorecardDataDictionary-09-08-2015.csv")
# data path
data_path <- "data/"
# read in google trend files to a single dataframe
files <- dir(data_path, pattern = "trends_up_to*")
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
reduce(rbind)
# read college scoreboard files into dataframes
id_name_link <- read.csv(file = "data/id_name_link.csv")
scorecard <- read.csv(file = "data/Most+Recent+Cohorts+(Scorecard+Elements).csv")
dictionary_scorecard <- read.csv(file = "data/CollegeScorecardDataDictionary-09-08-2015.csv")
colleges <- unique(raw_sch_df$schname)
# tidy trends df
# remove incomplete rows
sch_df <- raw_sch_df[complete.cases(raw_sch_df), ]
View(raw_sch_df)
View(sch_df)
View(id_name_link)
View(scorecard)
View(dictionary_scorecard)
scorecard %>% select(UNITID) %>% duplicated() %>% max()
id_name_link %>% select(opeid) %>% duplicated() %>% max()
id_name_link %>% select(shcname) %>% duplicated() %>% max()
id_name_link %>% select(schname) %>% duplicated() %>% max()
check_dupes(id_name_link, 'unitid')
check_dupes(scorecard, 'UNITID')
check_dupes(scorecard, 'unitid')
check_dupes(id_name_link, 'unitid')
check_dupes(scorecard, 'unitid')
check_dupes(scorecard, 'UNITID')
scorecard$UNITID
check_dupes(scorecard, 'UNITID')
scorecard$UNITID
scorecard$unitid
check_dupes(id_name_link, 'schname')
check_dupes(scorecard, 'UNITID')
check_dupes(id_name_link, 'unitid')
check_dupes(scorecard, 'test')
check_dupes(scorecard, 'unitid')
scorecard$mn_earn_wne_P6
scorecard$mn_earn_wne_p6
scorecard$md_earn_wne_p10.REPORTED.EARNINGS
names(scorecard)
median(scorecard$md_earn_wne_p10.REPORTED.EARNINGS)
vtable(scorecard)
mn <- scorecard$md_earn_wne_p10.REPORTED.EARNINGS
View(mn)
count(mn)
check_dupes(id_name_link, 'schname')
tidylog(id_name_link)
scoredata <- scorecard %>%
select(UNITID, OPEID, opied6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
mutate(UNITID = unitid, OPEID = opeid)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(UNITID = unitid, OPEID = opeid)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID)
View(scorecard)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(UNITID = unitid, OPEID = unitid)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS)
View(scoredata)
scoredata$UNITID
mutate(scoredata, UNITID = unitid)
mutate(scoredata, unitid = UNITID)
scoredata$UNITID
scoredata$unitid
rename(scoredata, UNITID = unitid)
rename(scoredata, unitid = UNITID)
scoredata$unitid
vtable(scoredata)
data("mtcars")
mtcars
names(mtcars)
mutate(mtcars, mpg = MPG)
mutate(mtcars, MPG = mpg)
names(mtcars)
help(mutate)
mutate()
help(rename)
?rename
?rename()
rename(mtcars, mpg = MPG)
rename(mtcars, MPG = mpg)
names(mtcars)
scoredata <- scoredata %>% rename(unitid = UNITID)
names(scoredata)
scoredata <- scoredata %>% rename(opeid = OPEID)
names(scoredata)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID)
names(scoredata)
total <- merge(id_name_link, scoredata, by = "unitid", all.x = TRUE, all.y = TRUE)
view(total)
id_to_trends <- merge(id_name_link, sch_df, by = "schname", all.x = TRUE, all.y = TRUE)
View(id_to_trends)
id_to_trends <- merge(id_name_link, sch_df, by = "schname", all.x = TRUE, all.y = TRUE) %>%
select(unitid, opeid, schname, keyword, keynum, monthorweek, index)
id_to_trends <- merge(id_name_link, sch_df, by = "schname", all.x = TRUE, all.y = TRUE) %>%
select(unitid, opeid, schname, keyword, monthorweek, index)
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE)
View(earnings_to_trends)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS)
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, opeid, schname, INSTNM, keyword, monthorweek, index, yr10_earnings)
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, schname, INSTNM, keyword, monthorweek, index, yr10_earnings)
id_to_trends <- merge(sch_df, id_name_link, by = "schname", all.x = TRUE, all.y = FALSE) %>%
select(unitid, opeid, schname, keyword, monthorweek, index)
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, schname, INSTNM, keyword, monthorweek, index, yr10_earnings)
# Load relevant libraries
library(tidyverse)
library(tidylog)
library(vtable)
library(jtools)
library(car)
library(purrr)
# data path
data_path <- "data/"
# read in google trend files to a single dataframe
files <- dir(data_path, pattern = "trends_up_to*")
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
reduce(rbind)
# read college scoreboard files into dataframes
id_name_link <- read.csv(file = "data/id_name_link.csv")
scorecard <- read.csv(file = "data/Most+Recent+Cohorts+(Scorecard+Elements).csv")
dictionary_scorecard <- read.csv(file = "data/CollegeScorecardDataDictionary-09-08-2015.csv")
colleges <- unique(raw_sch_df$schname)
View(scorecard)
View(raw_sch_df)
# tidy trends df
# remove incomplete rows
sch_df <- raw_sch_df[complete.cases(raw_sch_df), ]
# read college scoreboard files into dataframes
id_name_link <- read.csv(file = "data/id_name_link.csv")
scorecard <- read.csv(file = "data/Most+Recent+Cohorts+(Scorecard+Elements).csv")
dictionary_scorecard <- read.csv(file = "data/CollegeScorecardDataDictionary-09-08-2015.csv")
colleges <- unique(raw_sch_df$schname)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS)
scoredata
test <- scoredata[ which(scoredata$yr10_earnings=='PrivacySuppressed' & scoredata$yr10_earnings=='NULL'), ]
View(test)
test <- scoredata[ which(scoredata$yr10_earnings=='PrivacySuppressed'), ]
View(test)
test
test <- test %>% as.integer(yr10_earnings)
test <- test %>% as.numeric(yr10_earnings)
as.numeric(x = x)
test <- as.numeric(test$yr10_earnings)
test
scoredata <- as.numeric(scoredata$yr10_earnings)
View(scoredata)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS) %>%
as.numeric(yr10_earnings)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS) %>%
as.numeric(scoredata$yr10_earnings)
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS)
vtable(scoredata)
as.numeric(scoredata$yr10_earnings)
scoredata$yr10_earnings <- as.numeric(scoredata$yr10_earnings)
scoredata <- scoredata[complete.cases(scoredata), ]
vtable(scoredata)
median(scoredata$yr10_earnings)
filter(scoredata, scoredata$yr10_earnings==31200)
max(scoredata$yr10_earnings)
filter(scoredata, scoredata$yr10_earnings==250000)
filter(scoredata, scoredata$yr10_earnings==8400)
id_to_trends <- merge(sch_df, id_name_link, by = "schname", all.x = TRUE, all.y = FALSE) %>%
select(unitid, opeid, schname, keyword, monthorweek, index)
View(id_to_trends)
earnings_to_trends <- merge(scoredata, id_to_trends, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, schname, INSTNM, keyword, monthorweek, index, yr10_earnings)
View(earnings_to_trends)
filter(earnings_to_trends, earnings_to_trends$schname=="seattle university")
earnings_to_trends <- merge(scoredata, id_to_trends, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, INSTNM, keyword, monthorweek, index, yr10_earnings)
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, INSTNM, keyword, monthorweek, index, yr10_earnings)
earnings_to_trends <- earnings_to_trends[complete.cases(earnings_to_trends), ]
summary(scoredata$yr10_earnings)
# create dummy variable. 0 for low earning schools and 1 for high earning schools
# earning status is based on median earning for all schools (32000)
# low earning is based on schools falling in or below 25th quartile
# High earning is based on schools falling in or above the 75th quartile
desc_stats <- summary(scoredata$yr10_earnings)
filter(scoredata, scoredata$yr10_earnings>39200)
filter(scoredata, scoredata$yr10_earnings<2500)
filter(scoredata, scoredata$yr10_earnings<25000)
desc_stats
check_dupes(earnings_to_trends, 'INSTNM')
check_dupes <- function(data, vars) {
data %>%
select(vars) %>%
duplicated() %>%
max()
}
check_dupes(earnings_to_trends, 'INSTNM')
duplicated(earnings_to_trends$INSTNM)
earnings_to_trends[duplicated(earings_to_trends$INSTNM)]
earnings_to_trends[duplicated(earnings_to_trends$INSTNM)]
earnings_to_trends$INSTNM[duplicated(earnings_to_trends$INSTNM)]
scoredata$INSTNM[duplicated(scoredata$INSTNM)]
scoredata <- scoredata[!duplicated(scoredata$INSTNM)]
scoredata <- scoredata$INSTNM[!duplicated(scoredata$INSTNM)]
scoredata$INSTNM[duplicated(scoredata$INSTNM)]
# transform scorecard data to new data frame with selected and renamed rows
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS)
# convert earnings column to numeric, remove NAs and remove duplicates
scoredata$yr10_earnings <- as.numeric(scoredata$yr10_earnings)
scoredata <- scoredata[complete.cases(scoredata), ]
scoredata$INSTNM[duplicated(scoredata$INSTNM)]
scoredata$unitid[duplicated(scoredata$unitid)]
ifelse(scoredata$yr10_earnings >= 39200, 1, 0)
earnings_to_trends$earing_status <- ifelse(earnings_to_trends$yr10_earnings >=31200, 1, 0)
lm(index~yr10_earnings, data = earnings_to_trends)
t <- lm(index~yr10_earnings, data = earnings_to_trends)
export_summs(t)
t <- lm(index~log(yr10_earnings), data = earnings_to_trends)
export_summs(t)
t <- lm(index~log(yr10_earnings) + earning_status, data = earnings_to_trends)
t <- lm(index~log(yr10_earnings) + earing_status, data = earnings_to_trends)
export_summs(t)
t <- lm(log(yr10_earnings)~index + earing_status, data = earnings_to_trends)
export_summs(t)
t <- lm(log(yr10_earnings)~earing_status, data = earnings_to_trends)
export_summs(t)
effect_plot(t, pred = 'slim', plot.points = TRUE)
effect_plot(t, pred = 'index', plot.points = TRUE)
effect_plot(t, pred = 'index', plot.points = TRUE)
effect_plot(t, pred = 'index', plot.points = TRUE, data = earnings_to_trends)
# merge scorecard data to the trend data based on unitid
# Keeping only the scorecard data we have trend data for and removing NAs
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, INSTNM, keyword, monthorweek, index, yr10_earnings)
earnings_to_trends <- earnings_to_trends[complete.cases(earnings_to_trends), ]
earnings_to_trends$earning_status <- ifelse(earnings_to_trends$yr10_earnings >=31200, 1, 0)
reg <- lm(index~y10_earnings, data = earnings_to_trends)
reg <- lm(index~yr10_earnings, data = earnings_to_trends)
export_summs(reg)
effect_plot(reg, pred = 'yr10_earnings', plot.points = TRUE)
img <- effect_plot(reg, pred = 'yr10_earnings', plot.points = TRUE)
View(img)
View(img)
View(img)
help(join)
group_by(sch_df, monthorweek)
plot(x = earnings_to_trends$index, y = earnings_to_trends$yr10_earnings)
summary(scoredata$yr10_earnings)
scoredata$INSTNM[duplicated(scoredata$INSTNM)]
reg <- lm(index~log(yr10_earnings), data = earnings_to_trends)
export_summs(reg)
effect_plot(reg, pred = 'log(yr10_earnings)', plot.points = TRUE)
dupes <- scoredata$INSTNM[duplicated(scoredata$INSTNM)]
nam <- anti_join(scoredata, dupes, by=INSTNM)
nam <- anti_join(scoredata, dupes, by=INSTNM, copy = TRUE)
View(dupes)
dupes$INSTNM <- scoredata$INSTNM[duplicated(scoredata$INSTNM)]
dupes <- dupes %>% select(INSTNM)
# Load relevant libraries
library(tidyverse)
library(tidylog)
library(vtable)
library(jtools)
library(car)
# data path
data_path <- "data/"
# read in google trend files to a single data frame
files <- dir(data_path, pattern = "trends_up_to*")
raw_sch_df<- files %>%
map(~ read.csv(file.path(data_path, .))) %>%
reduce(rbind)
# remove incomplete rows
sch_df <- raw_sch_df[complete.cases(raw_sch_df), ]
View(sch_df)
# read college scoreboard files into data frames
id_name_link <- read.csv(file = "data/id_name_link.csv")
View(id_name_link)
check_dupes <- function(data, vars) {
data %>%
select(vars) %>%
duplicated() %>%
max()
}
check_dupes(id_name_link, 'unitid')
check_dupes(id_name_link, 'schname')
id_dupes <- id_name_link[duplicated(id_name_link$schname ),]
View(id_dupes)
anti_join(id_dupes, id_name_link, by = 'schname')
id_name_link <- anti_join(id_dupes, id_name_link, by = 'schname')
check_dupes(id_name_link, 'schname')
# read college scoreboard files into data frames
id_name_link <- read.csv(file = "data/id_name_link.csv")
id_name_link <- anti_join(id_name_link, id_dupes, by = 'schname')
check_dupes(id_name_link, 'schname')
# read college scoreboard files into data frames
id_name_link <- read.csv(file = "data/id_name_link.csv")
scorecard <- read.csv(file = "data/Most+Recent+Cohorts+(Scorecard+Elements).csv")
dictionary_scorecard <- read.csv(file = "data/CollegeScorecardDataDictionary-09-08-2015.csv")
# Check if unitid is key
# check for duplicates
scorecard %>% select(UNITID) %>% duplicated() %>% max()
id_name_link %>% select(opeid) %>% duplicated() %>% max()
id_name_link %>% select(schname) %>% duplicated() %>% max()
check_dupes <- function(data, vars) {
data %>%
select(vars) %>%
duplicated() %>%
max()
}
check_dupes(id_name_link, 'unitid')
check_dupes(scorecard, 'unitid')
check_dupes(id_name_link, 'schname')
# generate list of duplicates in id_name_link
id_dupes <- id_name_link[duplicated(id_name_link$schname ),]
# remove duplicates in id_name_link
id_name_link <- anti_join(id_name_link, id_dupes, by = 'schname')
check_dupes(id_name_link, 'schname')
check_dupes(id_name_link, 'unitid')
# transform scorecard data to new data frame with selected and renamed rows
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS)
# convert earnings column to numeric, remove NAs and remove duplicates
scoredata$yr10_earnings <- as.numeric(scoredata$yr10_earnings)
scoredata <- scoredata[complete.cases(scoredata), ]
#scoredata <- scoredata$INSTNM[!duplicated(scoredata$INSTNM)]
check_dupes(scoredata, 'INSTNM')
View(scoredata)
scoredupes <- scoredata[duplicated(scoredata$INSTNM),]
scoredata <- anti_join(scoredata, scoredupes, by = 'INSTNM')
#scoredata <- scoredata$INSTNM[!duplicated(scoredata$INSTNM)]
check_dupes(scoredata, 'INSTNM')
# merge id data frame to trend dataframe, keeping only schools with trend data
id_to_trends <- merge(sch_df, id_name_link, by = "schname", all.x = TRUE, all.y = FALSE) %>%
select(unitid, opeid, schname, keyword, monthorweek, index)
View(id_to_trends)
vtable(id_to_trends)
byname <- id_to_trends %>% group_by(schname)
View(byname)
byname %>% summary(index)
# merge scorecard data to the trend data based on unitid
# Keeping only the scorecard data we have trend data for and removing NAs
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, INSTNM, keyword, monthorweek, index, yr10_earnings)
earnings_to_trends <- earnings_to_trends[complete.cases(earnings_to_trends), ]
View(earnings_to_trends)
# transform scorecard data to new data frame with selected and renamed rows
scoredata <- scorecard %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS, PREDDEG) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS)
filter(scoredata$PREDDEG == 3)
vtable(scoredata)
filter(scoredata$PREDDEG==3)
filter(scoredata$yr10_earnings==32000)
filter(scoredata$yr10_earnings=='32000')
filter(scoredata, scoredata$PREDDEG==3)
# transform scorecard data to new data frame with selected and renamed rows
scoredata <- scorecard %>%
filter(PREDDEG==3) %>%
select(UNITID, OPEID, opeid6, INSTNM, md_earn_wne_p10.REPORTED.EARNINGS, PREDDEG) %>%
rename(unitid = UNITID, opeid = OPEID, yr10_earnings = md_earn_wne_p10.REPORTED.EARNINGS)
summary(scoredata$PREDDEG)
# convert earnings column to numeric, remove NAs and remove duplicates
scoredata$yr10_earnings <- as.numeric(scoredata$yr10_earnings)
scoredata <- scoredata[complete.cases(scoredata), ]
#scoredata <- scoredata$INSTNM[!duplicated(scoredata$INSTNM)]
check_dupes(scoredata, 'INSTNM')
scoredupes <- scoredata[duplicated(scoredata$INSTNM),]
scoredata <- anti_join(scoredata, scoredupes, by = 'INSTNM')
check_dupes(scoredata, 'INSTNM')
# merge id data frame to trend dataframe, keeping only schools with trend data
id_to_trends <- merge(sch_df, id_name_link, by = "schname", all.x = TRUE, all.y = FALSE) %>%
select(unitid, opeid, schname, keyword, monthorweek, index)
# merge scorecard data to the trend data based on unitid
# Keeping only the scorecard data we have trend data for and removing NAs
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, INSTNM, keyword, monthorweek, index, yr10_earnings)
earnings_to_trends <- earnings_to_trends[complete.cases(earnings_to_trends), ]
check_dupes(earnings_to_trends, 'INSTNM')
# merge scorecard data to the trend data based on unitid
# Keeping only the scorecard data we have trend data for and removing NAs
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, INSTNM, keyword, monthorweek, index, yr10_earnings, PREDDEG)
earnings_to_trends <- earnings_to_trends[complete.cases(earnings_to_trends), ]
summary(earnings_to_trends$PREDDEG)
# merge scorecard data to the trend data based on unitid
# Keeping only the scorecard data we have trend data for and removing NAs
earnings_to_trends <- merge(id_to_trends, scoredata, by = "unitid", all.x = TRUE, all.y = FALSE) %>%
select(unitid, INSTNM, keyword, monthorweek, index, yr10_earnings)
earnings_to_trends <- earnings_to_trends[complete.cases(earnings_to_trends), ]
earnings_to_trends$earning_status <- ifelse(earnings_to_trends$yr10_earnings >=31200, 1, 0)
# create dummy variable. 0 for low earning schools and 1 for high earning schools
# earning status is based on the descriptive statistics of earnings for all schools
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 8400   24200   31200   33233   39200  250000
# low earning is based on schools falling in or below 25th quartile (24200)
# High earning is based on schools falling in or above the 75th quartile (39200)
desc_stats <- summary(scoredata$yr10_earnings)
reg <- lm(index~log(yr10_earnings), data = earnings_to_trends)
export_summs(reg)
effect_plot(reg, pred = 'log(yr10_earnings)', plot.points = TRUE)
effect_plot(reg, pred = 'yr10_earnings', plot.points = TRUE)
reg <- lm(index~log(yr10_earnings), data = earnings_to_trends)
byname %>% summarise(mean_index = mean(index), med_index = median(index))
########################### standardize index scores here ##############################
########################################################################################
by_name <- scoredata %>% group_by(schname)
########################### standardize index scores here ##############################
########################################################################################
by_name <- scoredata %>% group_by(INSTNM)
View(by_name)
by_name$mean_index <- scoredata %>%  summarise(mean(index))
########################### standardize index scores here ##############################
########################################################################################
by_name <- id_to_trends %>% group_by(INSTNM)
########################### standardize index scores here ##############################
########################################################################################
by_name <- id_to_trends %>% group_by(schname)
by_name$mean_index <- id_to_trends %>%  summarise(mean(index))
by_name$ <- id_to_trends %>%  summarise(mean(index))
by_name <- id_to_trends %>%  summarise(mean(index))
by_name$i <- id_to_trends %>%  summarise(mean(index))
########################### standardize index scores here ##############################
########################################################################################
by_name <- id_to_trends %>% group_by(schname)
by_name$index_mean <- id_to_trends %>%  summarise(mean(index))
by_name$index_stdv <- id_to_trends %>% summarise(sd(index))
by_name$std_index <- (by_name$index - by_name$index_mean) / by_name$index_stdv
########################### standardize index scores here ##############################
########################################################################################
by_name <- id_to_trends %>% group_by(unitid)
by_name$index_mean <- id_to_trends %>%  summarise(mean(index))
by_name$index_stdv <- id_to_trends %>% summarise(sd(index))
by_name$std_index <- (by_name$index - by_name$index_mean) / by_name$index_stdv
by_name %>% summarise(mean_index = mean(index), med_index = median(index))
by_name %>% summarise(mean_index = mean(index), med_index = median(index))
########################### standardize index scores here ##############################
########################################################################################
by_name <- id_to_trends %>% group_by(schname)
by_name %>% summarise(mean_index = mean(index), med_index = median(index))
by_name %>% summarise(mean_index = mean(index), med_index = median(index), sd_index = sd(index))
sd_index <- by_name %>% summarise(mean_index = mean(index), med_index = median(index), sd_index = sd(index))
sd_index
View(sd_index)
check_dupes(sd_index, schname)
